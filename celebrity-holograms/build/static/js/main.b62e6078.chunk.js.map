{"version":3,"sources":["components/layouts/SignedInLinks.js","redux/actions/authActions.js","components/layouts/SignedOutLinks.js","components/layouts/Navbar.js","Client.js","components/dashboard/Dashboard.js","redux/actions/hologramActions.js","components/holograms/HologramInfo.js","components/auth/SignIn.js","components/auth/Register.js","components/holograms/AddHolograms.js","components/holograms/Hologram.js","components/holograms/Holograms.js","components/holograms/Search.js","App.js","serviceWorker.js","redux/reducers/authReducer.js","redux/reducers/hologramReducer.js","redux/reducers/index.js","config.js","index.js"],"names":["connect","dispatch","signOut","getState","_ref2","getFirebase","auth","then","type","props","react_default","a","createElement","className","react_router_dom","to","onClick","SignedOutLinks","state","console","log","firebase","links","uid","layouts_SignedInLinks","layouts_SignedOutLinks","checkStatus","response","status","error","Error","concat","statusText","parseJSON","json","Client","getAllHolograms","fetch","accept","addHologram","hologram","method","headers","Content-Type","body","JSON","stringify","Object","objectSpread","result","getHologramById","id","deleteHologram","Dashboard","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","findAllHolograms","Component","holograms","_ref","match","params","SignIn","email","password","handleChange","event","setState","defineProperty","target","value","handleSubmit","preventDefault","signIn","authError","onSubmit","htmlFor","onChange","creds","credentials","signInWithEmailAndPassword","catch","err","Register","firstName","lastName","AddHolograms","hologramName","hologramOf","dimensionsWidth","dimensionsHeight","price","quantity","description","Hologram","removeHologram","e","_this$props$hologram","hologramInfoRout","removeHologramsById","hologramsLayout","map","holograms_Hologram","key","Search","handleSearch","findHologramsById","selectedHologram","App","layouts_Navbar","dashboard_Dashboard","react_router","exact","path","component","Holograms","HologramInfo","Boolean","window","location","hostname","initState","authReducer","arguments","length","undefined","recentlyAddedHologramIds","addHoloGram","isRequestLoading","successId","removedId","hologramReducer","action","toConsumableArray","filter","h","rootReducer","combineReducers","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","store","createStore","compose","applyMiddleware","thunk","withExtraArgument","reactReduxFirebase","fireBaseConfig","attachAuthIsReady","firebaseAuthIsReady","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b62e6078.chunk.js","sourcesContent":["import React from 'react'\nimport { NavLink } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { signOut } from '../../redux/actions/authActions'\n\nconst SignedInLinks = (props) => {\n  return(\n    <ul className=\"right\">\n      <li><NavLink to='/'>Notifications</NavLink></li>\n      {/* eslint-disable-next-line */}\n      <li><a onClick={props.signOut}>Log Out</a></li>\n      <li><NavLink to='/' className='btn btn-floating light-blue lighten-1'>HJ</NavLink></li>\n    </ul>\n  )\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    signOut: () => dispatch(signOut())\n  }\n}\n\nexport default connect(null, mapDispatchToProps)(SignedInLinks)\n","export const signIn = (credentials) => {\n  return (dispatch, getState, { getFirebase }) => {\n    const firebase = getFirebase()\n    firebase.auth().signInWithEmailAndPassword(\n      credentials.email,\n      credentials.password\n    ).then(() => {\n      dispatch({ type: 'LOGIN_SUCCESS'})\n    }).catch((err) => {\n      dispatch({ type: 'LOGIN_FAIL', err})\n    })\n  }\n}\n\nexport const signOut = () => {\n  return (dispatch, getState, {getFirebase}) => {\n    const firebase = getFirebase();\n\n    firebase.auth().signOut().then(() => {\n      dispatch({ type: 'SIGNOUT_SUCCESS' })\n    });\n  }\n}\n","import React from 'react'\nimport { NavLink } from 'react-router-dom'\n\nconst SignedOutLinks = () => {\n  return(\n    <ul className=\"right\">\n      <li><NavLink to='/signin' className='light-blue lighten-1'>Sing In</NavLink></li>\n      <li><NavLink to='/register'>Sing Up</NavLink></li>\n    </ul>\n  )\n}\n\nexport default SignedOutLinks\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport SignedInLinks from './SignedInLinks'\nimport SignedOutLinks from './SignedOutLinks'\nconst Navbar = (props) => {\n  const { auth } = props\n  const links = auth.uid ? <SignedInLinks /> : <SignedOutLinks />;\n  return(\n    <nav className=\"nav-wrapper grey darken-3\">\n      <div className=\"container\">\n        <Link to='/' className=\"brand-logo\">\n          Celebrity Holograms\n        </Link>\n        {links}\n      </div>\n    </nav>\n  )\n}\nconst mapStateToProps = (state) => {\n  console.log(state)\n  return {\n    auth: state.firebase.auth\n  }\n}\nexport default connect(mapStateToProps)(Navbar)\n","function getAllHolograms() {\n  return fetch(`https://us-central1-harshal-playground.cloudfunctions.net/app/hologram`, {\n    accept: \"application/json\"\n  })\n    .then(checkStatus)\n    .then(parseJSON)\n}\nfunction getHologramById(id) {\n  return fetch(`https://us-central1-harshal-playground.cloudfunctions.net/app/hologram/${id}`, {\n    accept: \"application/json\"\n  })\n    .then(checkStatus)\n    .then(parseJSON)\n}\nfunction addHologram(hologram) {\n  return fetch(`https://us-central1-harshal-playground.cloudfunctions.net/app/hologram`, {\n    method:'POST',\n    // mode: 'cors',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body:  JSON.stringify({...hologram})\n  })\n    .then(checkStatus)\n    .then(parseJSON)\n    .then(result => console.log('add',  JSON.stringify(result, null, 2)))\n}\nfunction deleteHologram(id) {\n  return fetch(`https://us-central1-harshal-playground.cloudfunctions.net/app/hologram/${id}`, {\n    method:'DELETE',\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  })\n    .then(checkStatus)\n    .then(parseJSON)\n}\n\nfunction checkStatus(response) {\n  if (response.status >= 200 && response.status < 300) {\n    return response;\n  }\n  const error = new Error(`HTTP Error ${response.statusText}`);\n  error.status = response.statusText;\n  error.response = response\n  console.log(error) // eslint-disable-line no-console\n  throw error\n}\n\nfunction parseJSON(response) {\n  return response.json()\n}\n\nconst Client = { getAllHolograms, addHologram, getHologramById, deleteHologram }\nexport default Client\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { NavLink } from 'react-router-dom'\n\n// import Notifications from './Notifications'\n// import Holograms from '../holograms/Holograms'\n\nimport { findAllHolograms } from '../../redux/actions/hologramActions'\n\nclass Dashboard extends Component {\n\n  constructor(props){\n    super(props)\n    props.findAllHolograms()\n  }\n  render(){\n    return(\n      <div className=\"dashboard container\">\n        <nav className=\"nav-wrapper\">\n          <div className=\"container\">\n          <ul className=\"center\">\n            <li><NavLink to='/all'>Viw all</NavLink></li>\n            <li><NavLink to='/search'>Search</NavLink></li>\n            <li><NavLink to='/addHolograms'>Add Holograms</NavLink></li>\n          </ul>\n          </div>\n        </nav>\n      </div>\n    )\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    findAllHolograms: () => dispatch(findAllHolograms())\n  }\n}\n\nexport default connect(null, mapDispatchToProps)(Dashboard)\n","import Client from './../../Client'\n\nexport const addHologram = (hologram) => {\n  return (dispatch) => {\n    dispatch({\n      type: 'ADD_HOLOGRAM_REQUEST'\n    })\n    Client.addHologram(hologram).then(id =>\n    dispatch({\n      type: 'ADD_HOLOGRAM_DONE',\n      id\n    })).catch(\n      dispatch({\n        type: 'ADD_HOLOGRAM_FAIL'\n      })\n    )\n  }\n}\nexport const findAllHolograms = () => {\n  return (dispatch) => {\n    Client.getAllHolograms().then(holograms => \n    dispatch({\n      type: 'FIND_ALL_HOLOGRAMS',\n      holograms\n    }))\n  }\n}\nexport const findHologramsById = (id) => {\n  return (dispatch) => {\n    Client.getHologramById(id).then(hologram => \n      dispatch({\n        type: 'FIND_HOLOGRAMS_BY_ID',\n        hologram\n      }))\n  }\n}\nexport const removeHologramsById = (id) => {\n  return (dispatch) => {\n    Client.deleteHologram(id).then(hologram => \n      dispatch({\n        type: 'REMOVE_HOLOGRAMS_BY_ID',\n        id\n      }))\n  }\n}\n\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nconst HologramInfo = ({ match: {params: { id }}}) =>  {\n  return (\n    <div className=\"container section hologram-details\">\n      <div className=\"card z-depth-0\">\n        <div className=\"card-content\">\n          <span className=\"card-title\">Hologram Title - {id} </span>\n          <p>lorsfdasfasdfsdfas asdfasdfsdfsad sdfsadfasdfsad sdfasdfsadfsadf asdfasdfsadf sadfsadf asdfsad fasdf asdf sadf jowierpewsad f</p>\n        </div>\n        <div className=\"card-action grey lighten-4 grey-text\">\n          <div>Posted by Hashal Jhaveri</div>\n          <div>today 4 am</div>\n        </div>\n      </div>      \n    </div>\n  )\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    holograms: state.hologram.holograms\n  }\n}\n\nexport default connect(mapStateToProps)(HologramInfo)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\n\nimport { signIn } from '../../redux/actions/authActions'\n\nclass SignIn extends Component {\n\n  state = {\n    email: '',\n    password: ''\n  }\n  handleChange = (event) => {\n    this.setState({\n      [event.target.id]: event.target.value\n    })\n  }\n  handleSubmit = (event) => {\n    event.preventDefault()\n    this.props.signIn(this.state)\n  }\n  render(){\n    const { authError } = this.props\n    return(\n      <div className=\"container\">\n        <form onSubmit={this.handleSubmit} className=\"white\">\n          <h5 className=\"grey-text text-darken-3\">Sign In</h5>\n          <div className=\"input-field\">\n            <label htmlFor=\"email\">email</label>\n            <input type=\"email\" id=\"email\" onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"password\">Password</label>\n            <input type=\"password\" id=\"password\" onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <button className=\"btn light-blue lighten-1 z-depth-0\">Login</button>\n            <div className=\"center red-text\">\n              { authError ? <p>{authError}</p> : null }\n            </div>\n          </div>\n        </form>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return{\n    authError: state.auth.authError\n  }\n}\n\nconst mapDisptachToProps = (dispatch) => {\n  return {\n    signIn: (creds) => dispatch(signIn(creds))\n  }\n}\nexport default connect(mapStateToProps, mapDisptachToProps)(SignIn)\n","import React, { Component } from 'react'\n\nclass Register extends Component {\n\n  state = {\n    email: '',\n    password: '',\n    firstName: '',\n    lastName:''\n  }\n  handleChange = (event) => {\n    this.setState({\n      [event.target.id]: event.target.value\n    })\n  }\n  handleSubmit = (event) => {\n    event.preventDefault()\n  }\n  render(){\n    return(\n      <div className=\"container\">\n        <form onSubmit={this.handleSubmit} className=\"white\">\n          <h5 className=\"grey-text text-darken-3\">Register</h5>\n          <div className=\"input-field\">\n            <label htmlFor=\"email\">email</label>\n            <input type=\"email\" id=\"email\" onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"password\">Password</label>\n            <input type=\"password\" id=\"password\" onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"firstName\">Frist Name</label>\n            <input type=\"text\" id=\"firstName\" onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"lastName\">Last Name</label>\n            <input type=\"text\" id=\"lastName\" onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <button className=\"btn light-blue lighten-1 z-depth-0\">Login</button>\n          </div>\n        </form>\n      </div>\n    )\n  }\n}\n\nexport default Register\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { addHologram } from '../../redux/actions/hologramActions'\n// import HologramInfo from './HologramInfo';\n\nclass AddHolograms extends Component {\n  state = {\n    hologramName: '',\n    hologramOf: '',\n    dimensionsWidth: 0,\n    dimensionsHeight: 0,\n    price: 0,\n    quantity: '',\n    description: ''\n  }\n  handleChange = (event) => {\n    this.setState({\n      [event.target.id]: event.target.value\n    })\n  }\n  handleSubmit = (event) => {\n    event.preventDefault()\n    this.props.addHologram(this.state)\n  }\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"row center-align\">\n          <div className=\"col s7\">\n            <form onSubmit={this.handleSubmit} className=\"white\">\n              <h5 className=\"grey-text text-darken-3\">Add Hologram</h5>\n              <div className=\"input-field\">\n                <label htmlFor=\"hologramName\">Name</label>\n                <input type=\"text\" id=\"hologramName\" onChange={this.handleChange} />\n              </div>\n              <div className=\"input-field\">\n                <label htmlFor=\"hologramOf\">Who is in the hologram</label>\n                <input type=\"text\" id=\"hologramOf\" onChange={this.handleChange} />\n              </div>\n              <div className=\"input-field\">\n                <label htmlFor=\"dimensionsWidth\">Dimenstions - Width</label>\n                <input type=\"number\" id=\"dimensionsWidth\" onChange={this.handleChange} />\n              </div>\n              <div className=\"input-field\">\n                <label htmlFor=\"dimensionsHeight\">Dimenstions - Height</label>\n                <input type=\"number\" id=\"dimensionsHeight\" onChange={this.handleChange} />\n              </div>\n              <div className=\"input-field\">\n                <label htmlFor=\"price\">Price</label>\n                <input type=\"number\" id=\"price\" onChange={this.handleChange} />\n              </div>\n              <div className=\"input-field\">\n                <label htmlFor=\"quantity\">Quantity</label>\n                <input type=\"number\" id=\"quantity\" onChange={this.handleChange} />\n              </div>\n              <div className=\"input-field\">\n                <label htmlFor=\"description\">Description</label>\n                <input type=\"text\" id=\"description\" onChange={this.handleChange} />\n              </div>\n              <div className=\"input-field\">\n                <button className=\"btn light-blue lighten-1 z-depth-0\">Add</button>\n              </div>\n            </form>\n          </div>\n          <div className=\"col s5\">\n            <div className=\"container card\">\n              <div className=\"card-title z-depth-2 light-green\">\n                Status:\n              </div>\n            </div>\n          </div>\n        </div>\n\n      </div>\n    )\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    addHologram: (hologram) => dispatch(addHologram(hologram))\n  }\n}\n\nexport default connect(null, mapDispatchToProps)(AddHolograms)\n\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport { removeHologramsById } from './../../redux/actions/hologramActions'\n// import Modal from 'react-modal'\n\n// const modalStyle = {\n//   content : {\n//     top                   : '50%',\n//     left                  : '50%',\n//     right                 : 'auto',\n//     bottom                : 'auto',\n//     marginRight           : '-50%',\n//     transform             : 'translate(-50%, -50%)'\n//   }\n// }\n\nclass Hologram extends Component {\n  // state = {\n  //   modalIsOpen: false\n  // }\n  // toggleModal = () => {\n  //   this.setState({ modalIsOpen: !this.state.modalIsOpen })\n  // }\n\n  removeHologram = (e) => {\n    e.preventDefault()\n    this.props.removeHologram(this.props.id)\n  }\n\n  render() {\n    if(!this.props.hologram){\n      return null\n    }\n    const { hologramName, price, dimensionsWidth, dimensionsHeight } = this.props.hologram\n    const { id } = this.props\n    const hologramInfoRout = `/hologram/${id}`\n    return (\n      <div className=\"card z-depth-1 hologram-details\">\n        <div className=\"card-content grey-text text-darken-3\">\n          <span className=\"card-title\">{hologramName}</span>\n          <div className=\"divider\" />\n          <span className=\"card-content\">\n            {/* <Modal \n              isOpen={this.state.modalIsOpen}\n              contentLabel=\"Modal\"\n              className=\"modalStyle\"\n            >\n              <div className=\"card card-title\">\n                Do you want to permanently delete the hologram \n              </div>\n              <button className=\"btn\" onClick={this.toggleModal}> No, Close Modal</button>\n              <button className=\"btn\" onClick={this.toggleModal}> Yes, Remove Hologram</button>\n            </Modal> */}\n            <div className=\"row\">\n              <div className=\"col s12 m4\">\n                <p>{`Id: ${id}`}</p>\n                <p>{`Price: $${price}`}</p>\n                <p>{`Dimensions - HxL :${dimensionsHeight}cm X ${dimensionsWidth}cm`}</p>\n              </div>\n              <div className=\"col s12 m6 light-green\">\n                <h5>Hologram preivew will come here</h5>\n              </div>\n              <div className=\"col s12 m2 centered\">\n                <div className=\"row center-align\">\n                  <div className=\"col s6\">\n                    <Link to={hologramInfoRout} className=\"small material-icons\">info</Link>\n                    <div>More Info</div>\n                  </div>\n                  <div className=\"col s6\">\n                    <i onClick={this.removeHologram} className=\"small material-icons\">delete_forever</i>\n                    <div>Remove</div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </span>\n        </div>\n      </div>\n    )\n  }\n}\n\n// const mapStateToProps = (state) => {\n//   return {\n//     hologram: state.hologram.selectedHologram\n//   }\n// }\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    removeHologram: (id) => dispatch(removeHologramsById(id))\n  }\n}\n\nexport default connect(null, mapDispatchToProps)(Hologram)\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport Hologram from './Hologram'\n\nconst Holograms = ({holograms}) => {\n\n  /* eslint-disable */\n  console.log('=========================')\n  console.log('holograms : ',  JSON.stringify(holograms, null, 2) )\n  console.log('=========================')\n  /* eslint-enable */\n\n  const hologramsLayout = holograms.map(hologram => <Hologram hologram={hologram.hologram} id={hologram.id} key={hologram.id} />)\n\n  return (\n    <div className=\"container\">\n      <div className=\"hologram-list inline\">\n        {hologramsLayout}\n      </div>\n    </div>\n  )\n}\nconst mapStateToProps = (state) => {\n  return {\n    holograms: state.hologram.holograms\n  }\n }\n\nexport default connect(mapStateToProps)(Holograms)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\n\nimport { findHologramsById } from './../../redux/actions/hologramActions'\nimport Hologram from './Hologram';\n\nclass Search extends Component {\n\n  state = {\n    id: ''\n  }\n\n  handleSearch = (event) => {\n    event.preventDefault()\n    this.props.findHologramsById(this.state.id)\n  }\n\n  handleChange = (event) => {\n    this.setState({\n      [event.target.id]: event.target.value\n    })\n  }\n\n  render() {\n    const {hologram} = this.props\n    return (\n      <div className=\"container\">\n        <h5 className=\"grey-text text-darken-3\">Search Hologram</h5>\n        <div className=\"divider\"/>\n        <div className=\"row\">\n          <form className=\"col s12\" onSubmit={this.handleSearch}>\n            <div className=\"row\">\n              <div className=\"input-field col s3\">\n                <label htmlFor=\"id\">Search By Id</label>\n                <input type=\"text\" id=\"id\" onChange={this.handleChange} />\n              </div>\n              <div className=\"input-field col s1\">\n                <button className=\"btn light-blue lighten-1 z-depth-0\">Search</button>\n              </div>\n            </div>\n          </form>\n        </div>\n        <div className=\"divider\"/>\n        <div className=\"section\">\n          {\n            hologram && <Hologram hologram={hologram} />\n          }\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    hologram: state.hologram.selectedHologram\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    findHologramsById: (id) => dispatch(findHologramsById(id))\n  }\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(Search)\n\n","import React, { Component } from 'react'\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\n\nimport Navbar from './components/layouts/Navbar'\nimport Dashboard from './components/dashboard/Dashboard'\nimport HologramInfo from './components/holograms/HologramInfo'\nimport SignIn from './components/auth/SignIn'\nimport Register from './components/auth/Register'\nimport AddHolograms from './components/holograms/AddHolograms';\nimport Holograms from './components/holograms/Holograms';\n// import Hologram from './components/holograms/Hologram';\nimport Search from './components/holograms/Search';\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n          <Navbar />\n          <Dashboard />\n          <Switch>\n            <Route exact path='/' component={Holograms} />\n            <Route path='/hologram/:id' component={HologramInfo} />\n            <Route path='/signin' component={SignIn} />\n            <Route path='/register' component={Register} />\n            <Route path='/addHolograms' component={AddHolograms} />\n            <Route path='/all' component={Holograms} />\n            <Route path='/search' component={Search} />\n          </Switch>\n        </div>\n      </BrowserRouter>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState = {\n  authError: null\n}\n\nconst authReducer = (state = initState, action) => {\n  switch (action.type) {\n    case 'LOGIN_FAIL':\n      console.log('signin fail');\n      return {\n        ...state,\n        authError: 'Login Failed'\n      }\n    case 'LOGIN_SUCCESS':\n      console.log('signin success');\n      return {\n        ...state,\n        authError: null\n      }\n    case 'SIGNOUT_SUCCESS':\n      console.log('signout success');\n      return state\n    default:\n      return state\n  }\n}\n\nexport default authReducer\n","const initState = {\n  holograms: [],\n  selectedHologram: null,\n  recentlyAddedHologramIds: [],\n  addHoloGram: {\n    isRequestLoading: false,\n    successId: null,\n    error: false\n  },\n  removedId: null\n}\n\nconst hologramReducer = (state = initState, action) => {\n  switch (action.type) {\n    case 'ADD_HOLOGRAM_REQUEST':\n      return {\n        ...state,\n        addHoloGram: {\n          isRequestLoading: true,\n          successId: null,\n          error: false\n        },\n        recentlyAddedHologramIds: [action.id, ...state.recentlyAddedHologramIds]\n      }\n    case 'ADD_HOLOGRAM_DONE':\n      return {\n        ...state,\n        addHoloGram: {\n          isRequestLoading: false,\n          successId: action.id,\n          error: false\n        },\n        recentlyAddedHologramIds: [action.id, ...state.recentlyAddedHologramIds] \n      }\n    case 'ADD_HOLOGRAM_FAIL':\n      return {\n        ...state,\n        addHoloGram: {\n          isRequestLoading: false,\n          successId: action.id,\n          error: true\n        },\n        recentlyAddedHologramIds: [action.id, ...state.recentlyAddedHologramIds] \n      }\n    case 'FIND_ALL_HOLOGRAMS':\n      return{\n        ...state,\n        holograms: action.holograms\n      }\n    case 'FIND_HOLOGRAMS_BY_ID':\n      return {\n        ...state,\n        selectedHologram : action.hologram\n      }\n    case 'REMOVE_HOLOGRAMS_BY_ID':\n\n      const { selectedHologram } = state\n\n      if(selectedHologram && (action.id === selectedHologram.id)) {\n        return {\n          ...state,\n          selectedHologram: {}\n        }\n      }\n      return {\n        ...state,\n        holograms: state.holograms.filter(h => h.id !== action.id)\n      }\n\n    default:\n      return state\n  }\n}\n\nexport default hologramReducer\n","import { combineReducers } from 'redux'\n\nimport authReducer from './authReducer'\nimport hologramReducer from './hologramReducer'\nimport { firebaseReducer } from 'react-redux-firebase'\n\nconst rootReducer = combineReducers({\n  auth: authReducer,\n  hologram: hologramReducer,\n  firebase: firebaseReducer\n})\n\nexport default rootReducer\n","import firebase from 'firebase/app'\nimport 'firebase/auth'\n\nconst config = {\n  apiKey: \"AIzaSyCv1Cdf0KlGowRFhmNlWRqryVL0hRtA8As\",\n  authDomain: \"harshal-playground.firebaseapp.com\",\n  databaseURL: \"https://harshal-playground.firebaseio.com\",\n  projectId: \"harshal-playground\",\n  storageBucket: \"harshal-playground.appspot.com\",\n  messagingSenderId: \"361572841529\"\n}\n\nfirebase.initializeApp(config)\n \nexport default firebase\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport thunk from 'redux-thunk'\nimport { createStore, applyMiddleware, compose } from 'redux'\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport rootReducer from './redux/reducers'\nimport { reactReduxFirebase, getFirebase } from 'react-redux-firebase';\nimport fireBaseConfig from './config'\nconst store = createStore(\n  rootReducer, \n  compose(\n    applyMiddleware(thunk.withExtraArgument({getFirebase})),\n    reactReduxFirebase(fireBaseConfig, {attachAuthIsReady: true}) // redux binding for firebase\n  )\n)\n\nstore.firebaseAuthIsReady.then(() => {\n  ReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n  serviceWorker.unregister();\n})\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}